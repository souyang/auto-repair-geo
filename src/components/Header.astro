---
import { SITE } from '../config/site';
import { getCollection } from 'astro:content';

const currentPath = Astro.url.pathname;

// Fetch vehicle makes from the vehicles collection
const allVehicles = await getCollection('vehicles');
const vehicleMakes = allVehicles.map(vehicle => vehicle.data.make).sort();

// Fetch service areas from the locations collection
const allLocations = await getCollection('locations');
const serviceAreas = allLocations
  .map(location => ({
    name: location.data.name,
    slug: location.data.slug || location.slug
  }))
  .sort((a, b) => a.name.localeCompare(b.name));

// Fetch all services and group by category
const allServices = await getCollection('services');
const servicesByCategory = {
  maintenance: allServices.filter(service => service.data.category === 'maintenance'),
  repair: allServices.filter(service => service.data.category === 'repair')
};
---

<header class="bg-surface shadow-md sticky top-0 z-40">
  <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
    <div class="flex justify-between items-center py-4">
      <!-- Logo -->
      <div class="flex items-center">
        <a href="/" class="flex items-center space-x-2" aria-label="Skyline Auto Repair Home">
          <div class="w-10 h-10 bg-accent rounded-lg flex items-center justify-center">
            <svg class="w-6 h-6 text-white" fill="currentColor" viewBox="0 0 20 20">
              <path d="M8 16.5a1.5 1.5 0 11-3 0 1.5 1.5 0 013 0zM15 16.5a1.5 1.5 0 11-3 0 1.5 1.5 0 013 0z" />
              <path d="M3 4a1 1 0 011-1h12a1 1 0 011 1v2a1 1 0 01-1 1H4a1 1 0 01-1-1V4zM3 10a1 1 0 011-1h6a1 1 0 011 1v6a1 1 0 01-1 1H4a1 1 0 01-1-1v-6zM14 9a1 1 0 00-1 1v6a1 1 0 001 1h2a1 1 0 001-1v-6a1 1 0 00-1-1h-2z" />
            </svg>
          </div>
          <span class="text-xl font-display font-bold text-primary">Skyline Auto</span>
        </a>
      </div>

      <!-- Desktop Navigation -->
      <nav class="hidden md:flex items-center space-x-8" aria-label="Main navigation">
        <a href="/" class={`text-sm font-medium transition-colors hover:underline hover:underline-offset-4 hover:decoration-primary ${currentPath === '/' ? 'text-accent' : 'text-primary hover:text-accent'}`}>Home</a>
        <a href="/about" class={`text-sm font-medium transition-colors hover:underline hover:underline-offset-4 hover:decoration-primary ${currentPath.startsWith('/about') ? 'text-accent' : 'text-primary hover:text-accent'}`}>About</a>
        <!-- Services Dropdown -->
        <div class="relative group">
          <a href="/services" class={`text-sm font-medium transition-colors hover:underline hover:underline-offset-4 hover:decoration-primary ${currentPath.startsWith('/services') ? 'text-accent' : 'text-primary hover:text-accent'}`}>Services</a>
          <div class="absolute left-0 mt-2 w-64 bg-white border border-gray-200 rounded-lg shadow-lg opacity-0 invisible group-hover:opacity-100 group-hover:visible transition-all duration-300 z-50">
            <div class="py-2 max-h-80 overflow-y-auto scrollbar-thin scrollbar-thumb-gray-300 scrollbar-track-gray-100">
              <!-- Maintenance Services -->
              <div class="px-4 py-2">
                <h3 class="text-xs font-semibold text-gray-500 uppercase tracking-wide mb-2">Maintenance</h3>
                <ul class="space-y-1">
                  {servicesByCategory.maintenance.map(service => (
                    <li>
                      <a 
                        href={`/services/maintenance/${service.slug}`} 
                        class="block px-2 py-1 text-sm text-primary hover:bg-surface hover:underline hover:underline-offset-4 hover:decoration-primary rounded"
                      >
                        {service.data.title}
                      </a>
                    </li>
                  ))}
                </ul>
              </div>
              
              <!-- Divider -->
              <div class="border-t border-gray-200 my-2"></div>
              
              <!-- Repair Services -->
              <div class="px-4 py-2">
                <h3 class="text-xs font-semibold text-gray-500 uppercase tracking-wide mb-2">Repair</h3>
                <ul class="space-y-1">
                  {servicesByCategory.repair.map(service => (
                    <li>
                      <a 
                        href={`/services/repair/${service.slug}`} 
                        class="block px-2 py-1 text-sm text-primary hover:bg-surface hover:underline hover:underline-offset-4 hover:decoration-primary rounded"
                      >
                        {service.data.title}
                      </a>
                    </li>
                  ))}
                </ul>
              </div>
              
              <!-- View All Services Link -->
              <div class="border-t border-gray-200 mt-2 pt-2">
                <a 
                  href="/services" 
                  class="block px-4 py-2 text-sm font-medium text-accent hover:bg-surface rounded"
                >
                  View All Services â†’
                </a>
              </div>
            </div>
          </div>
        </div>
        <!-- Vehicles Dropdown -->
        <div class="relative group">
          <a href="/vehicles" class={`text-sm font-medium transition-colors hover:underline hover:underline-offset-4 hover:decoration-primary ${currentPath.startsWith('/vehicles') ? 'text-accent' : 'text-primary hover:text-accent'}`}>Vehicles</a>
          <div class="absolute left-0 mt-2 w-48 bg-white border border-gray-200 rounded-lg shadow-lg opacity-0 invisible group-hover:opacity-100 group-hover:visible transition-all duration-300 z-50">
            <!-- Typeahead Filter -->
            <div class="p-3 border-b border-gray-200">
              <input 
                type="text" 
                placeholder="Type to filter..." 
                class="w-full px-2 py-1 text-sm border border-gray-300 rounded focus:outline-none focus:ring-2 focus:ring-accent focus:border-accent"
                data-filter="vehicles"
              />
            </div>
            <ul class="py-2 max-h-64 overflow-y-auto scrollbar-thin scrollbar-thumb-gray-300 scrollbar-track-gray-100" data-list="vehicles">
              {vehicleMakes.map(make => (
                <li data-item={make.toLowerCase()}>
                  <a href={`/vehicles/${make.toLowerCase()}`} class="block px-4 py-2 text-sm text-primary hover:bg-surface hover:underline hover:underline-offset-4 hover:decoration-primary">{make}</a>
                </li>
              ))}
            </ul>
          </div>
        </div>
        <a href="/specials" class={`text-sm font-medium transition-colors hover:underline hover:underline-offset-4 hover:decoration-primary ${currentPath.startsWith('/specials') ? 'text-accent' : 'text-primary hover:text-accent'}`}>Specials</a>
        <a href="/reviews" class={`text-sm font-medium transition-colors hover:underline hover:underline-offset-4 hover:decoration-primary ${currentPath.startsWith('/reviews') ? 'text-accent' : 'text-primary hover:text-accent'}`}>Reviews</a>
        <a href="/check-engine-light" class={`text-sm font-medium transition-colors hover:underline hover:underline-offset-4 hover:decoration-primary ${currentPath.startsWith('/check-engine-light') ? 'text-accent' : 'text-primary hover:text-accent'}`}>Check Engine Light</a>
        <a href="/dealer-vs-independent" class={`text-sm font-medium transition-colors hover:underline hover:underline-offset-4 hover:decoration-primary ${currentPath.startsWith('/dealer-vs-independent') ? 'text-accent' : 'text-primary hover:text-accent'}`}>Dealer vs Independent</a>
        <!-- Service Area Dropdown -->
        <div class="relative group">
          <a href="/service-area" class={`text-sm font-medium transition-colors hover:underline hover:underline-offset-4 hover:decoration-primary ${currentPath.startsWith('/service-area') ? 'text-accent' : 'text-primary hover:text-accent'}`}>Service Area</a>
          <div class="absolute left-0 mt-2 w-56 bg-white border border-gray-200 rounded-lg shadow-lg opacity-0 invisible group-hover:opacity-100 group-hover:visible transition-all duration-300 z-50">
            <!-- Typeahead Filter -->
            <div class="p-3 border-b border-gray-200">
              <input 
                type="text" 
                placeholder="Type to filter..." 
                class="w-full px-2 py-1 text-sm border border-gray-300 rounded focus:outline-none focus:ring-2 focus:ring-accent focus:border-accent"
                data-filter="service-areas"
              />
            </div>
            <ul class="py-2 max-h-64 overflow-y-auto scrollbar-thin scrollbar-thumb-gray-300 scrollbar-track-gray-100" data-list="service-areas">
              {serviceAreas.map(area => (
                <li data-item={area.name.toLowerCase()}>
                  <a href={`/service-area/${area.slug}`} class="block px-4 py-2 text-sm text-primary hover:bg-surface hover:underline hover:underline-offset-4 hover:decoration-primary">{area.name}</a>
                </li>
              ))}
            </ul>
          </div>
        </div>
        <a href="/contact" class={`text-sm font-medium transition-colors hover:underline hover:underline-offset-4 hover:decoration-primary ${currentPath.startsWith('/contact') ? 'text-accent' : 'text-primary hover:text-accent'}`}>Contact</a>
        <a href="/for-ai" class={`text-sm font-medium transition-colors hover:underline hover:underline-offset-4 hover:decoration-primary ${currentPath.startsWith('/for-ai') ? 'text-accent' : 'text-primary hover:text-accent'}`}>For AI</a>
      </nav>

      <!-- Phone CTA -->
      <div class="hidden md:flex items-center space-x-4">
        <a 
          href={`tel:${SITE.phone.replace(/\D/g, '')}`}
          class="bg-accent text-white px-4 py-2 rounded-lg font-medium hover:bg-accent/90 transition-colors focus:outline-none focus:ring-2 focus:ring-accent focus:ring-offset-2"
          aria-label={`Call us at ${SITE.phone}`}
        >
          {SITE.phone}
        </a>
      </div>

      <!-- Mobile menu button -->
      <button 
        id="mobile-menu-button"
        class="md:hidden p-2 rounded-md text-primary hover:text-accent focus:outline-none focus:ring-2 focus:ring-accent"
        aria-label="Toggle mobile menu"
        aria-expanded="false"
      >
        <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16" />
        </svg>
      </button>
    </div>

    <!-- Mobile Navigation -->
    <div id="mobile-menu" class="hidden md:hidden pb-4">
      <nav class="space-y-2" aria-label="Mobile navigation">
        <a href="/" class={`block px-3 py-2 rounded-md text-base font-medium ${currentPath === '/' ? 'bg-accent text-white' : 'text-primary hover:bg-surface'}`}>Home</a>
        <a href="/about" class={`block px-3 py-2 rounded-md text-base font-medium ${currentPath.startsWith('/about') ? 'bg-accent text-white' : 'text-primary hover:bg-surface'}`}>About</a>
        <div>
          <span class="block px-3 py-2 text-base font-medium text-primary">Services</span>
          <div class="pl-4">
            <!-- Maintenance Services -->
            <div class="mb-2">
              <span class="block px-3 py-1 text-sm font-medium text-gray-500 uppercase tracking-wide">Maintenance</span>
              <ul class="pl-4">
                {servicesByCategory.maintenance.map(service => (
                  <li>
                    <a href={`/services/maintenance/${service.slug}`} class="block px-3 py-1 text-sm text-primary hover:bg-surface">{service.data.title}</a>
                  </li>
                ))}
              </ul>
            </div>
            <!-- Repair Services -->
            <div>
              <span class="block px-3 py-1 text-sm font-medium text-gray-500 uppercase tracking-wide">Repair</span>
              <ul class="pl-4">
                {servicesByCategory.repair.map(service => (
                  <li>
                    <a href={`/services/repair/${service.slug}`} class="block px-3 py-1 text-sm text-primary hover:bg-surface">{service.data.title}</a>
                  </li>
                ))}
              </ul>
            </div>
            <!-- View All Services Link -->
            <div class="mt-2 pt-2 border-t border-gray-200">
              <a href="/services" class="block px-3 py-1 text-sm font-medium text-accent hover:bg-surface">View All Services â†’</a>
            </div>
          </div>
        </div>
        <div>
          <span class="block px-3 py-2 text-base font-medium text-primary">Vehicles</span>
          <ul class="pl-4 max-h-48 overflow-y-auto scrollbar-thin scrollbar-thumb-gray-300 scrollbar-track-gray-100">
            {vehicleMakes.map(make => (
              <li>
                <a href={`/vehicles/${make.toLowerCase()}`} class="block px-3 py-2 text-sm text-primary hover:bg-surface">{make}</a>
              </li>
            ))}
          </ul>
        </div>
        <a href="/specials" class={`block px-3 py-2 rounded-md text-base font-medium ${currentPath.startsWith('/specials') ? 'bg-accent text-white' : 'text-primary hover:bg-surface'}`}>Specials</a>
        <a href="/reviews" class={`block px-3 py-2 rounded-md text-base font-medium ${currentPath.startsWith('/reviews') ? 'bg-accent text-white' : 'text-primary hover:bg-surface'}`}>Reviews</a>
        <a href="/check-engine-light" class={`block px-3 py-2 rounded-md text-base font-medium ${currentPath.startsWith('/check-engine-light') ? 'bg-accent text-white' : 'text-primary hover:bg-surface'}`}>Check Engine Light</a>
        <a href="/dealer-vs-independent" class={`block px-3 py-2 rounded-md text-base font-medium ${currentPath.startsWith('/dealer-vs-independent') ? 'bg-accent text-white' : 'text-primary hover:bg-surface'}`}>Dealer vs Independent</a>
        <div>
          <span class="block px-3 py-2 text-base font-medium text-primary">Service Area</span>
          <ul class="pl-4 max-h-48 overflow-y-auto scrollbar-thin scrollbar-thumb-gray-300 scrollbar-track-gray-100">
            {serviceAreas.map(area => (
              <li>
                <a href={`/service-area/${area.slug}`} class="block px-3 py-2 text-sm text-primary hover:bg-surface">{area.name}</a>
              </li>
            ))}
          </ul>
        </div>
        <a href="/contact" class={`block px-3 py-2 rounded-md text-base font-medium ${currentPath.startsWith('/contact') ? 'bg-accent text-white' : 'text-primary hover:bg-surface'}`}>Contact</a>
        <a href="/for-ai" class={`block px-3 py-2 rounded-md text-base font-medium ${currentPath.startsWith('/for-ai') ? 'bg-accent text-white' : 'text-primary hover:bg-surface'}`}>For AI</a>
        <a 
          href={`tel:${SITE.phone.replace(/\D/g, '')}`}
          class="block px-3 py-2 rounded-md text-base font-medium bg-accent text-white hover:bg-accent/90"
        >
          Call {SITE.phone}
        </a>
      </nav>
    </div>
  </div>
</header>

<script>
  // Mobile menu toggle
  const mobileMenuButton = document.getElementById('mobile-menu-button');
  const mobileMenu = document.getElementById('mobile-menu');

  if (mobileMenuButton && mobileMenu) {
    mobileMenuButton.addEventListener('click', () => {
      const isExpanded =
        mobileMenuButton.getAttribute('aria-expanded') === 'true';
      mobileMenuButton.setAttribute('aria-expanded', (!isExpanded).toString());
      mobileMenu.classList.toggle('hidden');
    });
  }

  // Typeahead filtering functionality
  document.addEventListener('DOMContentLoaded', () => {
    const filterInputs = document.querySelectorAll('[data-filter]');
    
    filterInputs.forEach(input => {
      const filterType = input.getAttribute('data-filter');
      const list = document.querySelector(`[data-list="${filterType}"]`);
      
      if (!list) return;
      
      input.addEventListener('input', (e) => {
        const target = e.target as HTMLInputElement;
        const searchTerm = target.value.toLowerCase().trim();
        const items = list.querySelectorAll('[data-item]');
        
        items.forEach(item => {
          const itemText = item.getAttribute('data-item');
          const link = item.querySelector('a') as HTMLElement;
          
          if (searchTerm === '' || (itemText && itemText.includes(searchTerm))) {
            (item as HTMLElement).style.display = 'block';
            if (link) link.style.opacity = '1';
          } else {
            (item as HTMLElement).style.display = 'none';
            if (link) link.style.opacity = '0.5';
          }
        });
      });
      
      // Clear filter when dropdown closes
      const dropdown = input.closest('.group');
      if (dropdown) {
        const observer = new MutationObserver(() => {
          if (!dropdown.classList.contains('group-hover:opacity-100')) {
            (input as HTMLInputElement).value = '';
            const items = list.querySelectorAll('[data-item]');
            items.forEach(item => {
              (item as HTMLElement).style.display = 'block';
              const link = item.querySelector('a') as HTMLElement;
              if (link) link.style.opacity = '1';
            });
          }
        });
        
        observer.observe(dropdown, {
          attributes: true,
          attributeFilter: ['class']
        });
      }
    });
  });
</script>

<style>
  /* Improved dropdown hover behavior */
  .group:hover .group-hover\:opacity-100 {
    opacity: 1 !important;
    visibility: visible !important;
  }
  
  /* Ensure dropdown stays visible when hovering over the dropdown menu */
  .group .group-hover\:opacity-100:hover {
    opacity: 1 !important;
    visibility: visible !important;
  }
  
  /* Add a small gap to prevent the dropdown from disappearing */
  .group .group-hover\:opacity-100 {
    margin-top: 0.5rem;
  }
  
  /* Ensure the dropdown menu has proper pointer events */
  .group .group-hover\:opacity-100 {
    pointer-events: auto;
  }
  
  /* Typeahead filter input styling */
  [data-filter] {
    transition: all 0.2s ease;
  }
  
  [data-filter]:focus {
    box-shadow: 0 0 0 2px rgba(59, 130, 246, 0.2);
  }
  
  /* Smooth transitions for filtered items */
  [data-item] {
    transition: opacity 0.2s ease, display 0.2s ease;
  }
  
  /* Highlight matching text */
  [data-item] a {
    transition: opacity 0.2s ease;
  }
</style> 