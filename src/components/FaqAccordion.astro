---
export interface Props {
  faqs: Array<{
    q: string;
    a: string;
  }>;
  title?: string;
}

const { faqs, title = "Frequently Asked Questions" } = Astro.props;
// Generate a unique ID for this FAQ section
const sectionId = `faq-section-${Math.random().toString(36).substr(2, 9)}`;
---

<div class="space-y-4" data-faq-section={sectionId}>
  {title && <div class="text-2xl font-display font-semibold text-primary mb-6">{title}</div>}
  
  <div class="space-y-2">
    {faqs.map((faq, index) => (
      <div class="border border-gray-200 rounded-lg">
        <button
          class="w-full px-6 py-4 text-left flex items-center justify-between hover:bg-surface transition-colors focus:outline-none focus:ring-2 focus:ring-accent focus:ring-inset"
          aria-expanded="false"
          aria-controls={`${sectionId}-faq-${index}`}
          data-faq-toggle
          data-faq-target={`${sectionId}-faq-${index}`}
          id={`${sectionId}-faq-button-${index}`}
        >
          <span class="font-medium text-primary">{faq.q}</span>
          <svg 
            class="w-5 h-5 text-gray-500 transform transition-transform duration-200" 
            fill="none" 
            stroke="currentColor" 
            viewBox="0 0 24 24"
            aria-hidden="true"
          >
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7" />
          </svg>
        </button>
        <div 
          id={`${sectionId}-faq-${index}`}
          class="hidden px-6 pb-4"
          role="region"
          aria-labelledby={`${sectionId}-faq-button-${index}`}
        >
          <p class="text-gray-700 leading-relaxed" set:html={faq.a}></p>
        </div>
      </div>
    ))}
  </div>
</div>

<script>
  // FAQ Accordion functionality
  document.addEventListener('DOMContentLoaded', () => {
    const faqSections = document.querySelectorAll('[data-faq-section]');
  
    faqSections.forEach(section => {
      const faqToggles = section.querySelectorAll('[data-faq-toggle]');
    
      faqToggles.forEach(toggle => {
        toggle.addEventListener('click', () => {
          const targetId = toggle.getAttribute('data-faq-target');
          if (!targetId) return;
          
          const target = document.getElementById(targetId);
          const isExpanded = toggle.getAttribute('aria-expanded') === 'true';
          const icon = toggle.querySelector('svg');
    
          // Toggle aria-expanded
          toggle.setAttribute('aria-expanded', (!isExpanded).toString());
    
          // Toggle content visibility
          if (target) {
            target.classList.toggle('hidden');
          }
    
          // Rotate icon
          if (icon) {
            icon.classList.toggle('rotate-180');
          }
        });
    
        // Keyboard support
        toggle.addEventListener('keydown', (e) => {
          const keyboardEvent = e as KeyboardEvent;
          if (keyboardEvent.key === 'Enter' || keyboardEvent.key === ' ') {
            e.preventDefault();
            (toggle as HTMLElement).click();
          }
        });
      });
    });
  });
</script> 