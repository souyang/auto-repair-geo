---
export interface Props {
  items: Array<{
    label: string;
    url: string;
  }>;
}

const { items } = Astro.props;
---

<nav class="mb-8" aria-label="Breadcrumb">
  <ol class="flex items-center space-x-2 text-sm text-gray-600" itemscope itemtype="https://schema.org/BreadcrumbList">
    {items.map((item, index) => {
      const isLast = index === items.length - 1;
      return (
        <li 
          class="flex items-center" 
          itemprop="itemListElement" 
          itemscope 
          itemtype="https://schema.org/ListItem"
        >
          <meta itemprop="position" content={(index + 1).toString()} />
          
          {isLast ? (
            <span class="text-primary font-medium" itemprop="name">{item.label}</span>
          ) : (
            <div class="flex items-center">
              <a 
                href={item.url} 
                class="hover:text-accent transition-colors" 
                itemprop="item"
              >
                <span itemprop="name">{item.label}</span>
              </a>
              <svg class="w-4 h-4 mx-2 text-gray-400" fill="currentColor" viewBox="0 0 20 20">
                <path fill-rule="evenodd" d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z" clip-rule="evenodd" />
              </svg>
            </div>
          )}
        </li>
      );
    })}
  </ol>
</nav> 