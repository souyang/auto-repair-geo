---
import BaseLayout from '../layouts/BaseLayout.astro';
import Breadcrumbs from '../components/Breadcrumbs.astro';
import ReviewCard from '../components/ReviewCard.astro';
import { SITE } from '../config/site';
import { getCollection } from 'astro:content';

const breadcrumbItems = [
  { label: 'Home', url: '/' },
  { label: 'Reviews', url: '/reviews' }
];

const reviews = await getCollection('reviews');
const aggregateRating = {
  ratingValue: SITE.ratingValue,
  reviewCount: SITE.reviewCount
};
---

<BaseLayout 
  title="Customer Reviews - Skyline Auto Repair"
  description="Read real customer reviews and testimonials for Skyline Auto Repair in Mountain View, CA. See why we're trusted by over 1,000 local drivers."
>
  <div class="bg-surface py-12">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
      <Breadcrumbs items={breadcrumbItems} />
      <div class="text-center mb-12">
        <h1 class="text-4xl lg:text-5xl font-display font-bold text-primary mb-4">
          Customer Reviews
        </h1>
        <div class="flex items-center justify-center space-x-2 mb-4">
          <div class="flex text-yellow-400">
            {Array.from({ length: 5 }).map(() => (
              <svg class="w-6 h-6 fill-current" viewBox="0 0 20 20">
                <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z" />
              </svg>
            ))}
          </div>
          <span class="text-lg font-semibold text-primary">{aggregateRating.ratingValue} ({aggregateRating.reviewCount} reviews)</span>
        </div>
        <p class="text-xl text-gray-600 max-w-3xl mx-auto">
          See what our customers are saying about their experience at Skyline Auto Repair.
        </p>
      </div>

      <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
        {reviews.map(review => (
          <ReviewCard
            author={review.data.author}
            rating={review.data.rating}
            date={review.data.date}
            text={review.data.text}
            vehicle={review.data.vehicle}
            businessValue={review.data.businessValue}
          />
        ))}
      </div>

      <script type="application/ld+json" set:html={JSON.stringify({
        "@context": "https://schema.org",
        "@type": "AutoRepair",
        "name": SITE.name,
        "aggregateRating": {
          "@type": "AggregateRating",
          "ratingValue": aggregateRating.ratingValue,
          "reviewCount": aggregateRating.reviewCount
        },
        "review": reviews.map(r => ({
          "@type": "Review",
          "author": r.data.author,
          "reviewBody": r.data.text,
          "reviewRating": {
            "@type": "Rating",
            "ratingValue": r.data.rating,
            "bestRating": 5,
            "worstRating": 1
          },
          "itemReviewed": {
            "@type": "AutoRepair",
            "name": SITE.name
          },
          "datePublished": r.data.date,
          ...(r.data.businessValue && { "description": r.data.businessValue })
        }))
      })} />
    </div>
  </div>
</BaseLayout> 