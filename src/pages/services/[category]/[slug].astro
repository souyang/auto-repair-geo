---
import { getCollection } from 'astro:content';
import BaseLayout from '../../../layouts/BaseLayout.astro';
import Breadcrumbs from '../../../components/Breadcrumbs.astro';
import { SITE } from '../../../config/site';

export async function getStaticPaths() {
  const services = await getCollection('services');
  return services.map(service => ({
    params: {
      category: service.data.category,
      slug: service.slug
    },
    props: { service }
  }));
}

const { service } = Astro.props as any;
const { data } = service;

// Render the MDX content
const { Content } = await service.render();

const breadcrumbItems = [
  { label: 'Home', url: '/' },
  { label: 'Services', url: '/services' },
  { label: data.title, url: `/services/${data.category}/${service.slug}` }
];
---

<BaseLayout 
  title={`${data.title} - ${SITE.name}`}
  description={data.summary}
>
  <div class="bg-surface py-12">
    <div class="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8">
      <Breadcrumbs items={breadcrumbItems} />
      
      <article class="bg-white rounded-lg shadow-md p-8">
        <!-- Header -->
        <div class="mb-8">
          <div class="flex items-start justify-between mb-4">
            <div class="flex-1">
              <h1 class="text-3xl lg:text-4xl font-display font-bold text-primary mb-4">
                {data.title}
              </h1>
              <p class="text-xl text-gray-600 mb-4">{data.summary}</p>
              <p class="text-gray-700 leading-relaxed">{data.excerpt}</p>
            </div>
            <div class="ml-8 text-right">
              <div class="text-3xl font-display font-bold text-accent mb-2">{data.price}</div>
              <div class="text-lg text-gray-500">{data.duration}</div>
            </div>
          </div>

          <!-- Tags -->
          <div class="flex flex-wrap gap-2 mb-6">
            {data.tags.map(tag => (
              <span class="inline-block bg-surface text-primary text-sm px-3 py-1 rounded-full">
                {tag}
              </span>
            ))}
          </div>
        </div>

        <!-- Content -->
        <div class="prose prose-lg max-w-none">
          <Content />
        </div>

        <!-- FAQs -->
        {data.faqs && data.faqs.length > 0 && (
          <div class="mt-12">
            <h2 class="text-2xl font-display font-bold text-primary mb-6">
              Frequently Asked Questions
            </h2>
            <div class="space-y-4">
              {data.faqs.map(faq => (
                <div class="bg-surface rounded-lg p-6">
                  <h3 class="font-semibold text-primary mb-2">{faq.q}</h3>
                  <p class="text-gray-700">{faq.a}</p>
                </div>
              ))}
            </div>
          </div>
        )}

        <!-- CTA -->
        <div class="mt-8 p-6 bg-surface rounded-lg">
          <h3 class="text-xl font-display font-semibold text-primary mb-4">
            Ready to Schedule Your {data.title}?
          </h3>
          <div class="flex flex-col sm:flex-row gap-4">
            <a 
              href="/appointments" 
              class="inline-flex items-center justify-center bg-accent text-white px-6 py-3 rounded-lg font-semibold hover:bg-accent/90 transition-colors"
            >
              Book Appointment
              <svg class="w-5 h-5 ml-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7" />
              </svg>
            </a>
            <a 
              href={`tel:${SITE.phone.replace(/\D/g, '')}`}
              class="inline-flex items-center justify-center border border-accent text-accent px-6 py-3 rounded-lg font-semibold hover:bg-accent hover:text-white transition-colors"
            >
              Call {SITE.phone}
            </a>
          </div>
        </div>
      </article>
    </div>
  </div>
</BaseLayout>

<!-- Enhanced Structured Data for LLM Citation -->
<script type="application/ld+json" set:html={JSON.stringify({
  "@context": "https://schema.org",
  "@type": "Service",
  "name": data.title,
  "description": data.excerpt,
  "provider": {
    "@type": "AutoRepair",
    "name": SITE.name,
    "address": {
      "@type": "PostalAddress",
      "streetAddress": "500 Castro St",
      "addressLocality": "Mountain View",
      "addressRegion": "CA",
      "postalCode": "94041",
      "addressCountry": "US"
    },
    "telephone": SITE.phone,
    "email": SITE.email,
    "url": SITE.url
  },
  "offers": {
    "@type": "Offer",
    "price": data.price?.replace(/[^\d.]/g, ''),
    "priceCurrency": "USD",
    "availability": "https://schema.org/InStock",
    "validFrom": new Date().toISOString().split('T')[0]
  },
  "serviceType": data.category === 'maintenance' ? "Automotive Maintenance" : "Automotive Repair",
  "areaServed": SITE.areaServed.map(area => ({
    "@type": "City",
    "name": area
  })),
  "keywords": data.tags.join(', '),
  "mainEntityOfPage": {
    "@type": "WebPage",
    "@id": `${SITE.url}/services/${data.category}/${service.slug}`
  },
  "potentialAction": {
    "@type": "ReserveAction",
    "target": {
      "@type": "EntryPoint",
      "urlTemplate": `${SITE.url}/appointments`,
      "inLanguage": "en-US",
      "actionPlatform": [
        "http://schema.org/DesktopWebPlatform",
        "http://schema.org/MobileWebPlatform"
      ]
    },
    "result": {
      "@type": "Reservation",
      "name": `${data.title} Appointment`
    }
  }
})} /> 